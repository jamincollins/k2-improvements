#!/bin/ash

if [ -t 1 ]; then
  GREEN='\033[32m'
  RED='\033[31m'
  ENDCOLOR='\033[0m'
fi

get_services() {
  moonraker_pid="$(cat /var/run/moonraker.pid)"
  if [ -f /var/run/moonraker.pid ] && [ -d /proc/"$moonraker_pid" ] ; then
    cmdline="$(tr '\0' '\n' < /proc/"$moonraker_pid"/cmdline)"
    moonraker_dir="$(echo $cmdline | awk -F'-d ' '{print $2}' | awk '{print $1}')"
    moonraker_conf="$moonraker_dir/config/moonraker.conf"
    services=$(ls -1 /etc/init.d/ | sed 's/_service$//')
    echo $services
  else
    echo "Error: Invalid or missing PID file /var/run/moonraker.pid" >&2
    exit 1
  fi
}

get_pid_file() {
  service="$1"
  [ $service == "klipper" ] && service="klippy"
  pid_file="/var/run/$service.pid"
  echo $pid_file
}

is_running() {
  service="$1"
  pid_file="$(get_pid_file "$service")"

  if [ -f "$pid_file" ] && [ -d "/proc/$(cat $pid_file)" ]; then
      return 0
  fi

  if pidof "$service" &>/dev/null; then
      return 0
  fi
  return 1
}

print_process_status() {
  if is_running "$service"; then
    printf "%-33s$GREEN""RUNNING$ENDCOLOR\n" "$service"
  else
    printf "%-33s$RED""STOPPED$ENDCOLOR\n" "$service"
  fi
}

print_usage() {
  echo "Usage: $0 [command] <service>"
  echo "commands include status stop start restart"
}

get_script_path() {
  service="$1"
  script_path="$(ls -1 /etc/init.d/${service} /etc/init.d/${service}* 2>/dev/null|head -1)"
  echo "$script_path"
}

stop() {
  service="$1"
  script_path="$(get_script_path $service)"
  if [[ -f "$script_path" ]]; then
    "$script_path" stop
  fi
}

start() {
  service="$1"
  script_path="$(get_script_path $service)"
  if [[ -f "$script_path" ]]; then
    "$script_path" start
  fi
}

restart() {
  service="$1"
  script_path="$(get_script_path $service)"
  if [[ -f "$script_path" ]]; then
    "$script_path" restart
  fi
}

main() {
  action="$1"; shift
  case "$action" in
    status)
      if [ "$#" -lt 1 ]; then
        for service in $(get_services); do
          print_process_status $service
        done
      else
        for service in "$@"; do
          print_process_status $service
        done
      fi
      ;;
    start)
      start "$1"
      ;;
    stop)
      stop "$1"
      ;;
    restart)
      restart "$1"
      ;;
    *)
      print_usage
      exit 1
  esac
}

main "$@"
